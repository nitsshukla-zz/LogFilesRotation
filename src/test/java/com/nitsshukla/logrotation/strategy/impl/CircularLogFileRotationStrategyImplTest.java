/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.nitsshukla.logrotation.strategy.impl;

import com.nitsshukla.logrotation.strategy.LogFileRotationStrategy;
import org.junit.Test;

import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.StandardCharsets;

import static com.nitsshukla.logrotation.strategy.impl.CircularLogFileRotationStrategyImpl.DELIMETER;
import static junit.framework.TestCase.assertTrue;
import static org.junit.Assert.fail;

public class CircularLogFileRotationStrategyImplTest {

    private LogFileRotationStrategy logFileRotationStrategy;

    @Test
    public void testOverflowInput() throws Exception {
        logFileRotationStrategy = new CircularLogFileRotationStrategyImpl(60);
        int count_test = 9;
        for (int i=0;i<count_test;i++)
            logFileRotationStrategy.log((3*i)+""+(3*i+1)+""+(3*i+2));
        ByteBuffer byteBuffer = logFileRotationStrategy.getAllLogs();
        CharBuffer charBuffer = StandardCharsets.UTF_8.decode(byteBuffer);
        String a = new String(charBuffer.array());
        System.out.println(a);
        for (int i=count_test-1;i>1;i--) {
            assertTrue(a.contains((3 * i) + "" + (3 * i + 1) + "" + (3 * i + 2)));
            System.out.println(i);
        }
        System.out.println(a);
    }

    @Test
    public void testOverflowOrderedInput() throws Exception {
        logFileRotationStrategy = new CircularLogFileRotationStrategyImpl(60);
        int count_test = 9;
        for (int i=0;i<count_test;i++)
            logFileRotationStrategy.log((3*i)+""+(3*i+1)+""+(3*i+2));
        ByteBuffer byteBuffer = logFileRotationStrategy.getAllLogs();
        CharBuffer charBuffer = StandardCharsets.UTF_8.decode(byteBuffer);
        String a = new String(charBuffer.array());
        System.out.println(a);
        StringBuilder expected = new StringBuilder();
        int index=0;
        for (int i=2;i<count_test;i++) {
            String a1 = ((3 * i) + "" + (3 * i + 1) + "" + (3 * i + 2));
            index = a.indexOf(a1, index);
            if (index==-1) {
                System.out.println(i+"\t"+index);
                fail();
            }
        }
//        assertTrue(a.contains(expected));
        System.out.println(a);
    }

    @Test
    public void testSaneInput() {
        try {
            logFileRotationStrategy = new CircularLogFileRotationStrategyImpl(60);
            logFileRotationStrategy.log("123");
            logFileRotationStrategy.log("456");
            ByteBuffer byteBuffer = logFileRotationStrategy.getAllLogs();
            CharBuffer charBuffer = StandardCharsets.UTF_8.decode(byteBuffer);
            String a = new String(charBuffer.array());
            assertTrue(a.contains("123"));
            assertTrue(a.contains("456"));
            System.out.println(a);
        } catch (Exception e) {
            e.printStackTrace();
            fail();
        }
    }

}
